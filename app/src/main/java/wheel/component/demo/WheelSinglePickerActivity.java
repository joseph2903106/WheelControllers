package wheel.component.demo;import android.app.Activity;import android.content.Context;import android.os.Bundle;import android.view.View;import android.widget.ImageView;import android.widget.TextView;import java.util.ArrayList;import kankan.wheel.widget.WheelView;import wheel.component.genview.GenWheelView;import wheel.component.genview.WheelGeneralAdapter;import wheel.component.view.WheelSinglePicker;import wheel.component.view.WheelSinglePicker.WheelSingleSyncListener;public class WheelSinglePickerActivity extends Activity {	private TextView test;	private TextView test_2;	private TextView original_picker_test;	private WheelSinglePicker picker;	private WheelSinglePicker picker_2;	private String[] citys = { "Canada_1", "France_1", "Ukraine_1", "Usa_1", "Canada_2", "France_2", "Ukraine_2", "Usa_2", "Canada_3", "France_3", "Ukraine_3", "Usa_3" };	private int[] drawableRightArray = { R.drawable.japanmoney, R.drawable.usmoney, R.drawable.eruomoney, R.drawable.ukonwmoney, R.drawable.japanmoney, R.drawable.usmoney, R.drawable.eruomoney,			R.drawable.ukonwmoney, R.drawable.japanmoney, R.drawable.usmoney, R.drawable.eruomoney, R.drawable.ukonwmoney };	private GenView genView = new GenView();	private GenOriginalView genOriginalView = new GenOriginalView();	private ArrayList<WheelData> list = new ArrayList<WheelData>();	private WheelView original_picker;	@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		setContentView(R.layout.test_single);		test = (TextView) findViewById(R.id.test);		test_2 = (TextView) findViewById(R.id.test_2);		original_picker_test = (TextView) findViewById(R.id.original_picker_test);		picker = (WheelSinglePicker) findViewById(R.id.picker);		picker_2 = (WheelSinglePicker) findViewById(R.id.picker_2);		picker.setWheelListener(test.getId(), listener);		picker.setAllData(citys, citys);		picker_2.setWheelListener(test_2.getId(), listener);		picker_2.setAllData(citys, citys);		picker_2.setViewGenerator(genView);				original_picker = (WheelView) findViewById(R.id.original_picker);		WheelGeneralAdapter viewAdapter = new WheelGeneralAdapter(this, genOriginalView);		initTest();		viewAdapter.setData(list);		original_picker.setViewAdapter(viewAdapter);	}	private void initTest() {		list.clear();		for (int i = 0; i < citys.length; i++) {			WheelData inner = new WheelData();			inner.text = citys[i];			inner.drawable = drawableRightArray[i];			list.add(inner);		}	}	private class GenOriginalView extends GenWheelView {		@Override		protected View genBody(Context context, View convertView, Object element, int position) {			ViewHolder holder;			if (convertView != null) {				holder = (ViewHolder) convertView.getTag();			} else {				convertView = getLayoutInflater().inflate(R.layout.custom_wheel_inner, null);				holder = new ViewHolder();				holder.icn = (ImageView) convertView.findViewById(R.id.icon);				holder.text = (TextView) convertView.findViewById(R.id.text);				convertView.setTag(holder);			}			WheelData inner = (WheelData) element;			holder.icn.setBackgroundDrawable(getResources().getDrawable(inner.drawable));			holder.text.setText(inner.text);			return convertView;		}	}	private class GenView extends GenWheelView {		@Override		protected View genBody(Context context, View convertView, Object element, int position) {			ViewHolder holder;			if (convertView != null) {				holder = (ViewHolder) convertView.getTag();			} else {				convertView = getLayoutInflater().inflate(R.layout.custom_wheel_inner, null);				holder = new ViewHolder();				holder.icn = (ImageView) convertView.findViewById(R.id.icon);				holder.text = (TextView) convertView.findViewById(R.id.text);				convertView.setTag(holder);			}			holder.icn.setBackgroundDrawable(getResources().getDrawable(drawableRightArray[position]));			holder.text.setText(element.toString());			return convertView;		}	}	private class ViewHolder {		public ImageView icn;		public TextView text;	}	private class WheelData {		public int drawable;		public String text;	}	private WheelSingleSyncListener listener = new WheelSingleSyncListener() {		@Override		public void handleOrignal(int viewID, String data) {		}		@Override		public void handleDisplayString(int viewID, String displayString) {			if (viewID == R.id.test) {				test.setText(displayString + " getIndex " + picker.getIndex());			} else if (viewID == R.id.test_2) {				test_2.setText(displayString + " getIndex " + picker_2.getIndex());			}		}	};}